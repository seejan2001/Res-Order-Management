{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const Enums = Object.freeze({\n  IDLE: \"idle\",\n  LOADING: \"Loading\",\n  ERROR: \"error\"\n});\nconst foodslice = createSlice({\n  name: \"food\",\n  initialState: {\n    data: [],\n    status: Enums.IDLE,\n    cart_data: []\n  },\n  reducers: {\n    setStatus(state, action) {\n      state.status = action.payload;\n    },\n    fetchProduct(state, action) {\n      state.data = action.payload;\n    },\n    addInsideCart(state, action) {\n      console.log(action.payload);\n      if (state.cart_data === null) {\n        state.cart_data.push(action.payload);\n      } else {\n        state.cart_data.map(item => {\n          if (item.id === action.payload.id) {\n            state.cart_data = {\n              quantity: 1\n            };\n          }\n        });\n      }\n    },\n    removeInsideCart(state, action) {\n      console.log(action);\n      state.cart_data = state.cart_data.filter(res => res.id !== action.payload);\n    }\n  }\n});\nexport const {\n  setStatus,\n  fetchProduct,\n  addInsideCart,\n  removeInsideCart\n} = foodslice.actions;\nexport default foodslice.reducer;\n\n//Thunk middleWare\nexport function fetchData() {\n  return async function fetchDataFromApi(dispatch, getState) {\n    dispatch(setStatus(Enums.LOADING));\n    try {\n      const response = await axios.get(\"http://localhost:8081/foodList\");\n      dispatch(fetchProduct(response.data));\n      dispatch(setStatus(Enums.IDLE));\n    } catch (err) {\n      console.log(err);\n      dispatch(setStatus(Enums.ERROR));\n    }\n  };\n}\n\n// export function setToCart(action) {\n//   dispatch(addInsideCart(action));\n// }","map":{"version":3,"names":["createSlice","axios","Enums","Object","freeze","IDLE","LOADING","ERROR","foodslice","name","initialState","data","status","cart_data","reducers","setStatus","state","action","payload","fetchProduct","addInsideCart","console","log","push","map","item","id","quantity","removeInsideCart","filter","res","actions","reducer","fetchData","fetchDataFromApi","dispatch","getState","response","get","err"],"sources":["D:/OrderManagement/src/app/foodslice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const Enums = Object.freeze({\r\n  IDLE: \"idle\",\r\n  LOADING: \"Loading\",\r\n  ERROR: \"error\",\r\n});\r\n\r\nconst foodslice = createSlice({\r\n  name: \"food\",\r\n  initialState: {\r\n    data: [],\r\n    status: Enums.IDLE,\r\n    cart_data: [],\r\n  },\r\n  reducers: {\r\n    setStatus(state, action) {\r\n      state.status = action.payload;\r\n    },\r\n    fetchProduct(state, action) {\r\n      state.data = action.payload;\r\n    },\r\n    addInsideCart(state, action) {\r\n      console.log(action.payload);\r\n      if (state.cart_data === null) {\r\n        state.cart_data.push(action.payload);\r\n      } else {\r\n        state.cart_data.map((item) => {\r\n          if (item.id === action.payload.id) {\r\n            state.cart_data = { quantity: 1 };\r\n          }\r\n        });\r\n      }\r\n    },\r\n    removeInsideCart(state, action) {\r\n      console.log(action);\r\n      state.cart_data = state.cart_data.filter(\r\n        (res) => res.id !== action.payload\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setStatus, fetchProduct, addInsideCart, removeInsideCart } =\r\n  foodslice.actions;\r\nexport default foodslice.reducer;\r\n\r\n//Thunk middleWare\r\nexport function fetchData() {\r\n  return async function fetchDataFromApi(dispatch, getState) {\r\n    dispatch(setStatus(Enums.LOADING));\r\n    try {\r\n      const response = await axios.get(\"http://localhost:8081/foodList\");\r\n\r\n      dispatch(fetchProduct(response.data));\r\n      dispatch(setStatus(Enums.IDLE));\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(setStatus(Enums.ERROR));\r\n    }\r\n  };\r\n}\r\n\r\n// export function setToCart(action) {\r\n//   dispatch(addInsideCart(action));\r\n// }\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,KAAK,GAAGC,MAAM,CAACC,MAAM,CAAC;EACjCC,IAAI,EAAE,MAAM;EACZC,OAAO,EAAE,SAAS;EAClBC,KAAK,EAAE;AACT,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGR,WAAW,CAAC;EAC5BS,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAEV,KAAK,CAACG,IAAI;IAClBQ,SAAS,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACJ,MAAM,GAAGK,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDC,YAAYA,CAACH,KAAK,EAAEC,MAAM,EAAE;MAC1BD,KAAK,CAACL,IAAI,GAAGM,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDE,aAAaA,CAACJ,KAAK,EAAEC,MAAM,EAAE;MAC3BI,OAAO,CAACC,GAAG,CAACL,MAAM,CAACC,OAAO,CAAC;MAC3B,IAAIF,KAAK,CAACH,SAAS,KAAK,IAAI,EAAE;QAC5BG,KAAK,CAACH,SAAS,CAACU,IAAI,CAACN,MAAM,CAACC,OAAO,CAAC;MACtC,CAAC,MAAM;QACLF,KAAK,CAACH,SAAS,CAACW,GAAG,CAAEC,IAAI,IAAK;UAC5B,IAAIA,IAAI,CAACC,EAAE,KAAKT,MAAM,CAACC,OAAO,CAACQ,EAAE,EAAE;YACjCV,KAAK,CAACH,SAAS,GAAG;cAAEc,QAAQ,EAAE;YAAE,CAAC;UACnC;QACF,CAAC,CAAC;MACJ;IACF,CAAC;IACDC,gBAAgBA,CAACZ,KAAK,EAAEC,MAAM,EAAE;MAC9BI,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;MACnBD,KAAK,CAACH,SAAS,GAAGG,KAAK,CAACH,SAAS,CAACgB,MAAM,CACrCC,GAAG,IAAKA,GAAG,CAACJ,EAAE,KAAKT,MAAM,CAACC,OAC7B,CAAC;IACH;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,SAAS;EAAEI,YAAY;EAAEC,aAAa;EAAEQ;AAAiB,CAAC,GACvEpB,SAAS,CAACuB,OAAO;AACnB,eAAevB,SAAS,CAACwB,OAAO;;AAEhC;AACA,OAAO,SAASC,SAASA,CAAA,EAAG;EAC1B,OAAO,eAAeC,gBAAgBA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IACzDD,QAAQ,CAACpB,SAAS,CAACb,KAAK,CAACI,OAAO,CAAC,CAAC;IAClC,IAAI;MACF,MAAM+B,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,GAAG,CAAC,gCAAgC,CAAC;MAElEH,QAAQ,CAAChB,YAAY,CAACkB,QAAQ,CAAC1B,IAAI,CAAC,CAAC;MACrCwB,QAAQ,CAACpB,SAAS,CAACb,KAAK,CAACG,IAAI,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOkC,GAAG,EAAE;MACZlB,OAAO,CAACC,GAAG,CAACiB,GAAG,CAAC;MAChBJ,QAAQ,CAACpB,SAAS,CAACb,KAAK,CAACK,KAAK,CAAC,CAAC;IAClC;EACF,CAAC;AACH;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}