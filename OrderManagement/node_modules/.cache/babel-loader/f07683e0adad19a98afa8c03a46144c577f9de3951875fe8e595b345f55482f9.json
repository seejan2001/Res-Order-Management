{"ast":null,"code":"var _jsxFileName = \"D:\\\\OrderManagement\\\\src\\\\kitchenService\\\\KitchenService.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  MongoClient\n} = require(\"mongodb\");\nfunction fetchFromDataBase() {\n  const URI = \"mongodb://127.0.0.1:27017/restro\";\n  const client = new MongoClient(URI);\n  client.connect().then(() => {\n    console.log(\"Connected Successfully\");\n  });\n  const database = client.db(\"restro\");\n  const collection = database.collection(\"restros\");\n  if (collection == []) {\n    console.log(\"Database Is Empty\");\n  } else {\n    collection.find().toArray((err, documents) => {\n      if (err) {\n        console.error(\"Error fetching data:\", err);\n        return;\n      }\n      console.log(\"Fetched data:\", documents);\n    });\n  }\n  client.close();\n}\nconst KitchenService = () => {\n  const greeting = \"Hello, jsx\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: greeting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchFromDataBase(),\n      children: \"ViewOrders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = KitchenService;\nexport default KitchenService;\nvar _c;\n$RefreshReg$(_c, \"KitchenService\");","map":{"version":3,"names":["MongoClient","require","fetchFromDataBase","URI","client","connect","then","console","log","database","db","collection","find","toArray","err","documents","error","close","KitchenService","greeting","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/OrderManagement/src/kitchenService/KitchenService.js"],"sourcesContent":["const { MongoClient } = require(\"mongodb\");\r\n\r\nfunction fetchFromDataBase() {\r\n  const URI = \"mongodb://127.0.0.1:27017/restro\";\r\n  const client = new MongoClient(URI);\r\n  client.connect().then(() => {\r\n    console.log(\"Connected Successfully\");\r\n  });\r\n  const database = client.db(\"restro\");\r\n  const collection = database.collection(\"restros\");\r\n\r\n  if (collection == []) {\r\n    console.log(\"Database Is Empty\");\r\n  } else {\r\n    collection.find().toArray((err, documents) => {\r\n      if (err) {\r\n        console.error(\"Error fetching data:\", err);\r\n        return;\r\n      }\r\n      console.log(\"Fetched data:\", documents);\r\n    });\r\n  }\r\n  client.close();\r\n}\r\n\r\nconst KitchenService = () => {\r\n  const greeting = \"Hello, jsx\";\r\n  return (\r\n    <div>\r\n      <h1>{greeting}</h1>\r\n      <button onClick={fetchFromDataBase()}>ViewOrders</button>\r\n    </div>\r\n  );\r\n};\r\nexport default KitchenService;\r\n"],"mappings":";;AAAA,MAAM;EAAEA;AAAY,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE1C,SAASC,iBAAiBA,CAAA,EAAG;EAC3B,MAAMC,GAAG,GAAG,kCAAkC;EAC9C,MAAMC,MAAM,GAAG,IAAIJ,WAAW,CAACG,GAAG,CAAC;EACnCC,MAAM,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;IAC1BC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACvC,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGL,MAAM,CAACM,EAAE,CAAC,QAAQ,CAAC;EACpC,MAAMC,UAAU,GAAGF,QAAQ,CAACE,UAAU,CAAC,SAAS,CAAC;EAEjD,IAAIA,UAAU,IAAI,EAAE,EAAE;IACpBJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAClC,CAAC,MAAM;IACLG,UAAU,CAACC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAACC,GAAG,EAAEC,SAAS,KAAK;MAC5C,IAAID,GAAG,EAAE;QACPP,OAAO,CAACS,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;QAC1C;MACF;MACAP,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEO,SAAS,CAAC;IACzC,CAAC,CAAC;EACJ;EACAX,MAAM,CAACa,KAAK,CAAC,CAAC;AAChB;AAEA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,QAAQ,GAAG,YAAY;EAC7B,oBACEC,OAAA;IAAAC,QAAA,gBACED,OAAA;MAAAC,QAAA,EAAKF;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBL,OAAA;MAAQM,OAAO,EAAExB,iBAAiB,CAAC,CAAE;MAAAmB,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACE,EAAA,GARIT,cAAc;AASpB,eAAeA,cAAc;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}